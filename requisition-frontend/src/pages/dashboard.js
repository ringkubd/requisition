import AppLayout from '@/components/Layouts/AppLayout'
import Head from 'next/head'
import { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import axios from "@/lib/axios";
import { setInitialRequisition } from "@/store/slice/dashboardSlice";
import { Card } from "flowbite-react";
import DataTable from "react-data-table-component";

const Dashboard = () => {
    const dispatch = useDispatch();
    const dashboardData = useSelector(state => state.dashboard);
    const [initialColumns, setInitialColumns] = useState([]);

    function data(){
        axios.get('/api/dashboard-data')
            .then(({data}) => {
                dispatch(setInitialRequisition(data?.initial))
            })
            .catch(e => console.log(e))
    }

    useEffect(() => {
        data();
    }, [])

    useEffect(() => {
        if (dashboardData && dashboardData?.initial){
            console.log(dashboardData?.initial)
            setInitialColumns([
                {
                    name: 'IRF No',
                    selector: row => row.irf_no,
                    sortable: true,
                },
                {
                    name: 'Total Req. Unit',
                    selector: row => row.total_required_unit,
                    sortable: true,
                },
                {
                    name: 'Department',
                    selector: row => row.department?.name,
                    sortable: true,
                },
                {
                    name: 'Estimated Cost',
                    selector: row => row.estimated_cost,
                    sortable: true,
                },
                {
                    name: 'Purchase Requisition',
                    selector: row => row.is_purchase_requisition_generated ? 'Generated' : 'No',
                    sortable: true,
                },
                {
                    name: 'Generated By',
                    selector: row => row.user?.name,
                    sortable: true,
                },
                {
                    name: 'Created at',
                    selector: row => row.created_at,
                    sortable: true,
                },
            ])
        }
    }, [dashboardData]);

    return (
        <AppLayout
            header={
                <h2 className="font-semibold text-xl text-gray-800 leading-tight">
                    Dashboard
                </h2>
            }>
            <Head>
                <title>{process.env.APP_NAME} - Dashboard</title>
            </Head>

            <div className="py-12">
                <div className="max-w-7xl mx-auto sm:px-6 lg:px-8">
                    <div className="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                        <div className="p-6 bg-white border-b border-gray-200">
                            {
                                dashboardData?.initial && (
                                    <Card>
                                        <h2>Latest Initial Requisition</h2>
                                        <DataTable columns={initialColumns} data={dashboardData?.initial} />
                                    </Card>
                                )
                            }
                        </div>
                    </div>
                </div>
            </div>
        </AppLayout>
    )
}

export default Dashboard
